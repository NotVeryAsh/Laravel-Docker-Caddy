name: example-app
services:
    php:
        image: php-8.3
        build:
            context: ./
            dockerfile: ./docker/Dockerfile
        volumes:
            - .:/app
        ports:
            - '9000:9000'
        networks:
            - app
    caddy:
        image: caddy
        restart: unless-stopped
        ports:
            - '80:80'
            - '443:443'
            - '443:443/udp'
        volumes:
            - ./Caddyfile:/etc/caddy/Caddyfile
            - .:/app
            - caddy_data:/data
            - caddy_config:/config
        networks:
            - app
    pgsql:
        image: 'postgres:15'
        ports:
            - '${FORWARD_DB_PORT:-5432}:5432'
        environment:
            PGPASSWORD: '${DB_PASSWORD:-secret}'
            POSTGRES_DB: '${DB_DATABASE}'
            POSTGRES_USER: '${DB_USERNAME}'
            POSTGRES_PASSWORD: '${DB_PASSWORD:-secret}'
        volumes:
            - 'pgsql:/var/lib/postgresql/data'
        networks:
            - app
        healthcheck:
            test:
                - CMD
                - pg_isready
                - '-q'
                - '-d'
                - '${DB_DATABASE}'
                - '-U'
                - '${DB_USERNAME}'
            retries: 3
            timeout: 5s
    mailpit:
        image: 'axllent/mailpit:latest'
        ports:
            - '${FORWARD_MAILPIT_PORT:-1025}:1025'
            - '${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025'
        networks:
            - app
    redis:
        image: 'redis:alpine'
        ports:
            - '${FORWARD_REDIS_PORT:-6379}:6379'
        volumes:
            - 'redis:/data'
        networks:
            - app
        healthcheck:
            test:
                - CMD
                - redis-cli
                - ping
            retries: 3
            timeout: 5s
networks:
    app:
volumes:
    mysql:
    pgsql:
    redis:
    caddy_config:
    caddy_data:
